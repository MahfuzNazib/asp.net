#pragma checksum "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "42f6558f259acd3254c0026d5fc19065df060007"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_POS_Index), @"mvc.1.0.view", @"/Views/POS/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\_ViewImports.cshtml"
using InvoiceSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\_ViewImports.cshtml"
using InvoiceSystem.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"42f6558f259acd3254c0026d5fc19065df060007", @"/Views/POS/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65c5dc62d2dbe0ff10bf2e5a2161359cf02eea3a", @"/Views/_ViewImports.cshtml")]
    public class Views_POS_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<System.Data.DataTable>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
  
    ViewData["Title"] = "POS Billing";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container bg card p-2\">\r\n");
#nullable restore
#line 8 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
     using(Html.BeginForm("CreateNewInvoice", "POS"))
     {

            
    

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""row"">
        <div class=""col-md-6"">
            <table style=""border: 0"" width=""100%"">
                <tr>
                    <td>Date</td>
                    <td>
                        <input type=""text"" class=""form-control"" id=""TodayDate"" name=""InvoiceDate"" readonly/>
                    </td>
                </tr>

                <tr>
                    <td>Time</td>
                    <td>
                        <input type=""text"" class=""form-control"" id=""CurrentTime"" name=""Time"" readonly/>
                    </td>
                </tr>
            </table>
        </div>
    </div>
");
            WriteLiteral("     <hr />\r\n");
            WriteLiteral("    <div class=\"row mb-2\">\r\n\r\n");
            WriteLiteral("        <div class=\"col-md-3\">\r\n            <label>Item</label>\r\n            <select class=\"form-control\" id=\"ProductId\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "42f6558f259acd3254c0026d5fc19065df0600074531", async() => {
                WriteLiteral("Select Product");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 43 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
                 for (int i = 0; i < Model.Rows.Count; i++)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "42f6558f259acd3254c0026d5fc19065df0600076397", async() => {
#nullable restore
#line 45 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
                                                 Write(Model.Rows[i][1]);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 45 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
                       WriteLiteral(Model.Rows[i][0]);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 46 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </select>\r\n        </div>\r\n\r\n");
            WriteLiteral("        <div class=\"col-md-3\">\r\n            <label>Quantity</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"Quantity\"/>\r\n        </div>\r\n\r\n");
            WriteLiteral("        <div class=\"col-md-3\">\r\n            <label>Unit Price</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"UnitPrice\" readonly/>\r\n        </div>\r\n\r\n");
            WriteLiteral(@"        <div class=""col-md-3"">
            <label>Total Price</label>
            <input type=""number"" class=""form-control"" id=""TotalPrice"" readonly/>
        </div>

        <div class=""col-md-12 mt-2"">

            <button type=""button"" class=""btn btn-success float-right ml-2"" id=""Reset"">
                Reset
            </button>

            <button type=""button"" class=""btn btn-success float-right"" id=""AddToBill"">
                Add To Bill
            </button>


        </div>
    </div>
");
            WriteLiteral(@"    <div class=""row p-2"">
        <table class=""table table-bordered table-striped"">
            <thead class=""thead-dark"">
                <tr>
                    <td>Item</td>
                    <td>Quantity</td>
                    <td>Price/Unit</td>
                    <td>Amount</td>
                    <td>Remove</td>
                </tr>
            </thead>

            <tbody id=""ProductListDataTable"">
                
            </tbody>
        </table>
    </div>
");
            WriteLiteral("    <hr />\r\n");
            WriteLiteral(@"    <div class=""row mt-2"">
        <div class=""col-md-3"">
            <label>Sub Total</label>
            <input type=""number"" class=""form-control"" id=""SubTotal"" name=""SubTotal"" readonly />
        </div>

        <div class=""col-md-3"">
            <label>Discount</label>
            <input type=""number"" class=""form-control"" id=""Discount"" name=""Discount"" value=""0"" />
        </div>

        <div class=""col-md-3"">
            <label>Vat</label>
            <input type=""number"" class=""form-control"" id=""Vat"" name=""Vat"" value=""12"" readonly/>
        </div>

        <div class=""col-md-3"">
            <label>Grand Total</label>
            <input type=""number"" class=""form-control"" id=""GrandTotal"" name=""GrandTotal"" readonly />
        </div>

        <div class=""col-md-12 mt-3"">
            <button type=""submit"" class=""btn btn-info"">
                Amount Paid & Add New Bill
            </button>
        </div>
    </div>
");
#nullable restore
#line 133 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {

            // Define Some Global Variable. When The DOM is Ready Variables are Initialized.
            var SubTotal    = 0;
            var GrandTotal = 0
            var DiscountAmount = 0;
            var TaxAmount = 12;

            var date = new Date();

            var TodayDate = date.getDate() + ""/"" + (date.getMonth() + 1) + ""/"" + date.getFullYear();
            $('#TodayDate').val(TodayDate);

            var CurrentTime = date.getHours() + "":"" + date.getMinutes();
            $('#CurrentTime').val(CurrentTime);


            // Get Product Details
            $('#ProductId').change(function () {
                var ProductId = $(this).val();

                // When Product is Changed then Empty Quantity & Total Price;
                $('#Quantity').val('');
                $('#TotalPrice').val('');

                $.ajax({
                    type: ""GET"",
                    url: """);
#nullable restore
#line 165 "D:\ASP.NET MVC\InvoiceSystem\InvoiceSystem\Views\POS\Index.cshtml"
                     Write(Url.Action("GetProductInfo"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    dataType: ""json"",
                    data: { ProductId: ProductId },
                    success: function (response) {
                        $('#UnitPrice').val(response.value.price);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })

            });

            // Calculate Total Price Based on Quantity
            $('#Quantity').keyup(function () {
                const Quantity = $(this).val();
                const UnitPrice = $('#UnitPrice').val();
                const TotalPrice = parseInt(Quantity) * parseInt(UnitPrice);

                $('#TotalPrice').val(TotalPrice);
            });

            // Reset
            $('#Reset').click(function () {
                window.location.reload();
            });

            
            // Add To Bill Action
            $('#AddToBill').click(function () {

                if (!$('#ProductId').v");
                WriteLiteral(@"al()) {
                    swal(""Error"", ""Please Select a Product"", ""error"");
                    return false;
                }

                if (!$('#Quantity').val() || $('#Quantity').val() == 0) {
                    swal(""Error"", ""Quantity can't be Null or 0"", ""error"");
                    return false;
                }

                // If There was no Validation Error then Add Data into ProductListDataTable

                const ProductId     = $('#ProductId').val();
                const ProductName   = $('#ProductId option:selected').text();
                const UnitPrice     = $('#UnitPrice').val();
                const Quantity      = $('#Quantity').val();
                const TotalPrice    = $('#TotalPrice').val();

                IncrementSubTotal(TotalPrice);
                

                $('#ProductListDataTable').append(
                    `   <tr>

                        <td>${ProductName}</td>
                        <input type=""hidden"" value=""${P");
                WriteLiteral(@"roductId}"" name=""ProductId"" />

                        <td>${UnitPrice}</td>
                        <input type=""hidden"" value=""${UnitPrice}"" name=""UnitPrice"" />

                        <td>${Quantity}</td>
                        <input type=""hidden"" value=""${Quantity}"" name=""Quantity"" />

                        <td>${TotalPrice}</td>
                        <input type=""hidden"" value=""${TotalPrice}"" name=""TotalPrice"" />

                        <td>
                            <button class=""btn btn-danger btn-sm"" id=""RemoveProductFromList"">X</button>
                        </td>

                        </tr>
                    `
                );
            });

            // Remove Product From List
            $(""#ProductListDataTable"").on(""click"", ""#RemoveProductFromList"", function () {
                $(this).closest(""tr"").remove();
                DecrementSubTotal( $(this).closest(""tr"").find(""td:eq(3)"").text() )
            });


            // Increment SubTotal");
                WriteLiteral(@"
            function IncrementSubTotal(Amount)
            {
                SubTotal = parseInt(SubTotal) + parseInt(Amount);
                $('#SubTotal').val(SubTotal);
                DiscountCalculation(DiscountAmount);
            }

            // Decrement SubTotal
            function DecrementSubTotal(Amount)
            {
                SubTotal = parseInt(SubTotal) - parseInt(Amount);
                $('#SubTotal').val(SubTotal);
                DiscountCalculation(DiscountAmount);
            }

            // Discount OnKeyUp Event
            $('#Discount').keyup(function () {
                DiscountAmount = $(this).val();

                if (!DiscountAmount) {
                    swal(""Error"", ""Discount Amount Can't be null"", ""error"");
                    return false;
                }
                DiscountCalculation(DiscountAmount);
            });


            // Discount & Vat Calculation Function
            function DiscountCalculation(DiscountAmount");
                WriteLiteral(@")
            {
                const SubTotalAmount = $('#SubTotal').val();

                const VatAmount = (parseInt(SubTotalAmount) * parseInt(TaxAmount)) / 100;

                const DiscountValue = (parseInt(SubTotalAmount) * parseInt(DiscountAmount)) / 100;

                const GrandTotal = (parseInt(SubTotalAmount) - (parseInt(VatAmount) + parseInt(DiscountValue)));
                $('#GrandTotal').val(GrandTotal);
            }
            
        })

        
    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<System.Data.DataTable> Html { get; private set; }
    }
}
#pragma warning restore 1591
